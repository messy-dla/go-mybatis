<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skunk.springboot.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="com.skunk.springboot.model.User">
        <constructor>
            <idArg column="u_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
            <arg column="u_username" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="u_password" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="u_sex" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="u_createTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
            <arg column="u_cid" javaType="java.lang.Integer" jdbcType="INTEGER" />
        </constructor>
    </resultMap>

    <sql id="Base_Column_List">
      u_id, u_username, u_password, u_sex, u_createTime, u_cid
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user
        where u_id = #{uId,jdbcType=INTEGER}
    </select>
    <select id="selectAllUser" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where u_id = #{uId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.skunk.springboot.model.User">
    insert into user (u_id, u_username, u_password, 
      u_sex, u_createTime, u_cid
      )
    values (#{uId,jdbcType=INTEGER}, #{uUsername,jdbcType=VARCHAR}, #{uPassword,jdbcType=VARCHAR}, 
      #{uSex,jdbcType=VARCHAR}, #{uCreatetime,jdbcType=TIMESTAMP}, #{uCid,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.skunk.springboot.model.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uId != null">
                u_id,
            </if>
            <if test="uUsername != null">
                u_username,
            </if>
            <if test="uPassword != null">
                u_password,
            </if>
            <if test="uSex != null">
                u_sex,
            </if>
            <if test="uCreatetime != null">
                u_createTime,
            </if>
            <if test="uCid != null">
                u_cid,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uId != null">
                #{uId,jdbcType=INTEGER},
            </if>
            <if test="uUsername != null">
                #{uUsername,jdbcType=VARCHAR},
            </if>
            <if test="uPassword != null">
                #{uPassword,jdbcType=VARCHAR},
            </if>
            <if test="uSex != null">
                #{uSex,jdbcType=VARCHAR},
            </if>
            <if test="uCreatetime != null">
                #{uCreatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="uCid != null">
                #{uCid,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.skunk.springboot.model.User">
        update user
        <set>
            <if test="uUsername != null">
                u_username = #{uUsername,jdbcType=VARCHAR},
            </if>
            <if test="uPassword != null">
                u_password = #{uPassword,jdbcType=VARCHAR},
            </if>
            <if test="uSex != null">
                u_sex = #{uSex,jdbcType=VARCHAR},
            </if>
            <if test="uCreatetime != null">
                u_createTime = #{uCreatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="uCid != null">
                u_cid = #{uCid,jdbcType=INTEGER},
            </if>
        </set>
        where u_id = #{uId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.skunk.springboot.model.User">
    update user
    set u_username = #{uUsername,jdbcType=VARCHAR},
      u_password = #{uPassword,jdbcType=VARCHAR},
      u_sex = #{uSex,jdbcType=VARCHAR},
      u_createTime = #{uCreatetime,jdbcType=TIMESTAMP},
      u_cid = #{uCid,jdbcType=INTEGER}
    where u_id = #{uId,jdbcType=INTEGER}
  </update>
</mapper>